<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">
{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}
{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript>{{ 'component-mega-menu.css' | asset_url | stylesheet_tag }}</noscript>
{%- endif -%}

{%- if settings.cart_type == "drawer" -%}
  {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
  {{ 'component-cart.css' | asset_url | stylesheet_tag }}
  {{ 'component-totals.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
{%- endif -%}

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}</noscript>

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  /* Top Navigation Styles */
  .top-navigation-wrapper {
    border-bottom: 1px solid rgba(var(--color-foreground), 0.08);
    padding: {{ section.settings.top_nav_padding | default: 12 }}px 0;
    background: {% if section.settings.top_nav_background == 'transparent' %}transparent{% elsif section.settings.top_nav_background == 'primary' %}rgb(var(--color-button)){% else %}rgba(var(--color-base-background-1), 0.95){% endif %};
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  .top-navigation__list {
    display: flex;
    justify-content: {{ section.settings.top_nav_alignment | default: 'center' }};
    align-items: center;
    gap: {{ section.settings.top_nav_spacing | default: 30 }}px;
    margin: 0;
    padding: 0;
    list-style: none;
    flex-wrap: wrap;
  }

  .top-navigation__item {
    margin: 0;
  }

  .top-navigation__link {
    font-size: {{ section.settings.top_nav_font_size | default: 14 }}px;
    text-decoration: none;
    color: {% if section.settings.top_nav_background == 'primary' %}rgb(var(--color-button-text)){% else %}rgba(var(--color-foreground), 0.75){% endif %};
    transition: all var(--duration-short) ease;
    font-weight: {{ section.settings.top_nav_font_weight | default: 400 }};
    letter-spacing: 0.02em;
    padding: {{ section.settings.top_nav_link_padding | default: 8 }}px {{ section.settings.top_nav_link_padding | default: 8 | times: 1.5 }}px;
    border-radius: {{ section.settings.top_nav_border_radius | default: 4 }}px;
    {% if section.settings.top_nav_style == 'underline' %}
      border-bottom: 2px solid transparent;
    {% elsif section.settings.top_nav_style == 'button' %}
      background: rgba(var(--color-foreground), 0.05);
      border: 1px solid rgba(var(--color-foreground), 0.1);
    {% endif %}
  }

  .top-navigation__link:hover,
  .top-navigation__link--active {
    {% if section.settings.top_nav_style == 'underline' %}
      color: rgb(var(--color-foreground));
      border-bottom-color: rgb(var(--color-foreground));
    {% elsif section.settings.top_nav_style == 'button' %}
      background: rgba(var(--color-foreground), 0.1);
      color: rgb(var(--color-foreground));
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(var(--color-foreground), 0.15);
    {% else %}
      color: rgb(var(--color-foreground));
      background: rgba(var(--color-foreground), 0.05);
    {% endif %}
  }

  @media screen and (max-width: 749px) {
    .top-navigation-wrapper {
      {% if section.settings.top_nav_mobile_hide %}display: none;{% else %}display: block;{% endif %}
      padding: {{ section.settings.top_nav_padding | default: 12 | divided_by: 1.5 }}px 0;
    }
    
    .top-navigation__list {
      gap: {{ section.settings.top_nav_spacing | default: 30 | divided_by: 1.5 }}px;
      justify-content: center;
    }
    
    .top-navigation__link {
      font-size: {{ section.settings.top_nav_font_size | default: 14 | minus: 2 }}px;
      padding: {{ section.settings.top_nav_link_padding | default: 8 | divided_by: 1.2 }}px;
    }
  }

  /* Search Bar Positioning Styles */
  .header__search-bar {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 400 }}px;
    min-width: 250px;
  }

  .header__search-bar--left {
    grid-area: search-left;
    justify-self: start;
    margin-right: 2rem;
  }

  .header__search-bar--center {
    grid-area: search-center;
    justify-self: center;
    align-self: center;
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 500 }}px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* Ensure the search form fills the container properly */
  .header__search-bar--center .header__search-form {
    width: 100%;
    display: flex;
    justify-content: center;
  }

  .header__search-bar--center .header__search-field {
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 500 }}px;
  }

  .header__search-bar--right {
    grid-area: search-right;
    justify-self: end;
    margin-left: 2rem;
  }

  /* Hide search bar on mobile */
  @media screen and (max-width: 749px) {
    .header__search-bar {
      display: none;
    }
    
    /* Show search icon on mobile instead */
    .header--has-search-left .header__search,
    .header--has-search-center .header__search,
    .header--has-search-right .header__search {
      display: block !important;
    }
    
    /* Simplify mobile grid */
    .header--has-search-left,
    .header--has-search-center,
    .header--has-search-right {
      grid-template-areas: "heading icons" !important;
      grid-template-columns: 1fr auto !important;
    }
  }

  /* Tablet adjustments */
  @media screen and (max-width: 989px) and (min-width: 750px) {
    .header__search-bar--center {
      max-width: 350px;
      margin: 0 1rem;
    }
    
    .header__search-bar .header__search-input {
      font-size: 13px;
      padding: 10px 15px;
    }
  }

  /* Search Bar Form Styling */
  .header__search-bar {
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 300 }}px;
  }

  .header__search-bar .header__search-form {
    width: 100%;
    display: flex;
    align-items: center;
    position: relative;
  }

  .header__search-bar .header__search-field {
    width: 100%;
    margin: 0;
    position: relative;
  }

  .header__search-bar .header__search-input {
    width: 100%;
    padding: {{ section.settings.search_bar_padding | default: 12 }}px {{ section.settings.search_button_padding | default: 8 | times: 2 | plus: section.settings.search_icon_size | default: 16 | plus: 12 }}px {{ section.settings.search_bar_padding | default: 12 }}px {{ section.settings.search_bar_padding | default: 12 | times: 1.5 }}px;
    border: {{ section.settings.search_bar_border_width | default: 1 }}px solid {% if section.settings.search_bar_border_color == 'accent' %}rgb(var(--color-button)){% else %}rgba(var(--color-foreground), 0.2){% endif %};
    border-radius: {{ section.settings.search_bar_border_radius | default: 25 }}px;
    background: {% if section.settings.search_bar_background == 'transparent' %}transparent{% elsif section.settings.search_bar_background == 'accent' %}rgba(var(--color-button), 0.1){% elsif section.settings.search_bar_background == 'white' %}rgba(255, 255, 255, 0.95){% elsif section.settings.search_bar_background == 'dark' %}rgba(0, 0, 0, 0.1){% else %}rgba(var(--color-base-background-1), 0.95){% endif %};
    font-size: {{ section.settings.search_bar_font_size | default: 14 }}px;
    color: {% if section.settings.search_bar_background == 'dark' %}rgba(255, 255, 255, 0.9){% elsif section.settings.search_bar_background == 'white' %}rgba(0, 0, 0, 0.8){% else %}rgb(var(--color-foreground)){% endif %};
    transition: all var(--duration-short) ease;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    box-shadow: {% if section.settings.search_bar_background == 'white' %}0 2px 10px rgba(0, 0, 0, 0.1){% else %}none{% endif %};
  }

  .header__search-bar .header__search-input:focus {
    outline: none;
    border-color: rgb(var(--color-button));
    box-shadow: 0 0 0 {{ section.settings.search_bar_focus_width | default: 2 }}px rgba(var(--color-button), 0.2);
    {% if section.settings.search_bar_focus_effect == 'glow' %}
      box-shadow: 0 0 0 {{ section.settings.search_bar_focus_width | default: 2 }}px rgba(var(--color-button), 0.2), 
                  0 0 20px rgba(var(--color-button), 0.1);
    {% elsif section.settings.search_bar_focus_effect == 'scale' %}
      transform: scale(1.02);
    {% endif %}
  }

  .header__search-bar .header__search-input::placeholder {
    color: {% if section.settings.search_bar_background == 'dark' %}rgba(255, 255, 255, 0.6){% elsif section.settings.search_bar_background == 'white' %}rgba(0, 0, 0, 0.5){% else %}rgba(var(--color-foreground), 0.6){% endif %};
    font-style: {% if section.settings.search_placeholder_italic %}italic{% else %}normal{% endif %};
  }

  .header__search-bar .header__search-button {
    position: absolute;
    right: {{ section.settings.search_bar_padding | default: 12 | divided_by: 2 }}px;
    top: 50%;
    transform: translateY(-50%);
    background: {% if section.settings.search_button_style == 'filled' %}rgb(var(--color-button)){% elsif section.settings.search_button_style == 'outline' %}transparent{% else %}rgba(var(--color-button), 0.1){% endif %};
    color: {% if section.settings.search_button_style == 'filled' %}rgb(var(--color-button-text)){% else %}rgb(var(--color-button)){% endif %};
    border: {% if section.settings.search_button_style == 'outline' %}1px solid rgb(var(--color-button)){% else %}none{% endif %};
    border-radius: {{ section.settings.search_button_border_radius | default: 20 }}px;
    padding: {{ section.settings.search_button_padding | default: 8 }}px;
    cursor: pointer;
    transition: all var(--duration-short) ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .header__search-bar .header__search-button:hover {
    {% if section.settings.search_button_style == 'filled' %}
      background: rgba(var(--color-button), 0.9);
      transform: translateY(-50%) scale(1.05);
    {% elsif section.settings.search_button_style == 'outline' %}
      background: rgb(var(--color-button));
      color: rgb(var(--color-button-text));
    {% else %}
      background: rgba(var(--color-button), 0.2);
    {% endif %}
  }

  .header__search-bar .header__search-button svg {
    width: {{ section.settings.search_icon_size | default: 16 }}px;
    height: {{ section.settings.search_icon_size | default: 16 }}px;
  }

  /* Hide search field label */
  .header__search-bar .field__label {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Hide search icon when search bar is shown on desktop */
  @media screen and (min-width: 750px) {
    .header--has-search-left .header__search,
    .header--has-search-center .header__search,
    .header--has-search-right .header__search {
      display: none;
    }
  }

  /* Header Grid Layout Updates for Search Bar */
  .header--has-search-left {
    grid-template-areas: "search-left heading navigation icons";
    grid-template-columns: auto 1fr auto auto;
  }

  .header--has-search-center {
    grid-template-areas: "heading search-center icons";
    grid-template-columns: auto 1fr auto;
    align-items: center;
  }

  .header--has-search-center .header__search-bar--center {
    justify-self: center;
    align-self: center;
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 500 }}px;
  }
    width: 100%;
    max-width: {{ section.settings.search_bar_width | default: 500 }}px;
    margin: 0 1rem;
  }

  .header--has-search-right {
    grid-template-areas: "heading navigation search-right icons";
    grid-template-columns: auto 1fr auto auto;
  }

  /* Responsive adjustments */
  @media screen and (max-width: 989px) {
    .header--has-search-left,
    .header--has-search-center,
    .header--has-search-right {
      grid-template-areas: "heading icons";
      grid-template-columns: 1fr auto;
    }
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }

  /* Mobile Navigation Dynamic Styles */
  {% if section.settings.enable_mobile_navigation %}
    {% if section.settings.mobile_nav_style == 'custom' %}
      .mobile-nav--custom {
        background: {{ section.settings.mobile_nav_background | color_modify: 'alpha', section.settings.mobile_nav_transparency | divided_by: 100.0 }} !important;
        border-radius: {{ section.settings.mobile_nav_border_radius }}px {{ section.settings.mobile_nav_border_radius }}px 0 0;
        border-top: 1px solid {{ section.settings.mobile_nav_background | color_darken: 10 }};
      }
      
      .mobile-nav--custom .mobile-nav__link {
        color: {{ section.settings.mobile_nav_text_color }} !important;
      }
      
      .mobile-nav--custom .mobile-nav__link.active {
        color: {{ section.settings.mobile_nav_active_color }} !important;
      }
      
      .mobile-nav--custom .mobile-nav__badge {
        background: {{ section.settings.mobile_nav_badge_color }} !important;
        color: {{ section.settings.mobile_nav_badge_color | color_contrast: '#FFFFFF' }} !important;
      }
    {% endif %}
  {% else %}
    .mobile-nav {
      display: none !important;
    }
    
    @media screen and (max-width: 749px) {
      body {
        padding-bottom: 0 !important;
      }
    }
  {% endif %}
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>
{%- if settings.cart_type == "drawer" -%}
  <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-reset" class="icon icon-close"  fill="none" viewBox="0 0 18 18" stroke="currentColor">
    <circle r="8.5" cy="9" cx="9" stroke-opacity="0.2"/>
    <path d="M6.82972 6.82915L1.17193 1.17097" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
    <path d="M1.22896 6.88502L6.77288 1.11523" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
  </symbol>

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}

  {%- comment -%} Top Navigation Bar {%- endcomment -%}
  {%- if section.settings.show_top_navigation and section.settings.menu != blank -%}
    <div class="top-navigation-wrapper">
      <nav class="top-navigation page-width" role="navigation" aria-label="Top navigation">
        <ul class="top-navigation__list" role="list">
          {%- for link in linklists[section.settings.menu].links -%}
            <li class="top-navigation__item">
              <a href="{{ link.url }}" class="top-navigation__link{% if link.current %} top-navigation__link--active{% endif %}">
                {{ link.title | escape }}
              </a>
            </li>
          {%- endfor -%}
        </ul>
      </nav>
    </div>
  {%- endif -%}
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }}{% if section.settings.search_bar_type != 'icon' %} header--has-search-{{ section.settings.search_bar_position }}{% endif %} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- comment -%} Search Bar - Left Position {%- endcomment -%}
    {%- if section.settings.search_bar_type == 'bar' and section.settings.search_bar_position == 'left' -%}
      <div class="header__search-bar header__search-bar--left">
        {% render 'header-search-bar', input_id: 'HeaderSearchLeft' %}
      </div>
    {%- endif -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo motion-reduce',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank and section.settings.show_top_navigation == false
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- comment -%} Search Bar - Center Position {%- endcomment -%}
    {%- if section.settings.search_bar_type == 'bar' and section.settings.search_bar_position == 'center' -%}
      <div class="header__search-bar header__search-bar--center">
        {% render 'header-search-bar', input_id: 'HeaderSearchCenter' %}
      </div>
    {%- endif -%}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      {%- comment -%} Search Bar - Right Position {%- endcomment -%}
      {%- if section.settings.search_bar_type == 'bar' and section.settings.search_bar_position == 'right' -%}
        <div class="header__search-bar header__search-bar--right">
          {% render 'header-search-bar', input_id: 'HeaderSearchRight' %}
        </div>
      {%- endif -%}
      
      <div class="desktop-localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <noscript class="small-hide medium-hide">
            {%- form 'localization', id: 'HeaderCountryMobileFormNoScript', class: 'localization-form' -%}
              <div class="localization-form__select">
                <h2 class="visually-hidden" id="HeaderCountryMobileLabelNoScript">{{ 'localization.country_label' | t }}</h2>
                <select class="localization-selector link" name="country_code" aria-labelledby="HeaderCountryMobileLabelNoScript">
                  {%- for country in localization.available_countries -%}
                    <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %} selected{% endif %}>
                      {{ country.name }} ({{ country.currency.iso_code }} {{ country.currency.symbol }})
                    </option>
                  {%- endfor -%}
                </select>
                {% render 'icon-caret' %}
              </div>
              <button class="button button--tertiary">{{ 'localization.update_country' | t }}</button>
            {%- endform -%}
          </noscript>

          <localization-form class="small-hide medium-hide no-js-hidden" data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <noscript class="small-hide medium-hide">
            {%- form 'localization', id: 'HeaderLanguageMobileFormNoScript', class: 'localization-form' -%}
              <div class="localization-form__select">
                <h2 class="visually-hidden" id="HeaderLanguageMobileLabelNoScript">{{ 'localization.language_label' | t }}</h2>
                <select class="localization-selector link" name="locale_code" aria-labelledby="HeaderLanguageMobileLabelNoScript">
                  {%- for language in localization.available_languages -%}
                    <option value="{{ language.iso_code }}" lang="{{ language.iso_code }}" {%- if language.iso_code == localization.language.iso_code %} selected{% endif %}>
                      {{ language.endonym_name | capitalize }}
                    </option>
                  {%- endfor -%}
                </select>
                {% render 'icon-caret' %}
              </div>
              <button class="button button--tertiary">{{ 'localization.update_language' | t }}</button>
            {%- endform -%}
          </noscript>

          <localization-form class="small-hide medium-hide no-js-hidden" data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      {%- comment -%} Search Icon - Only show when search_bar_type is "icon" {%- endcomment -%}
      {%- if section.settings.search_bar_type == 'icon' -%}
        {% render 'header-search', input_id: 'Search-In-Modal' %}
      {%- endif -%}

      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}">
          {% render 'icon-account' %}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset header__cart--desktop" id="cart-icon-bubble">
        {%- liquid
          if cart == empty
            render 'icon-cart-empty'
          else
            render 'icon-cart'
          endif
        -%}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
      {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "Navigation & Search Settings"
    },
    {
      "type": "checkbox",
      "id": "show_top_navigation",
      "default": false,
      "label": "Show navigation on top"
    },
    {
      "type": "select",
      "id": "search_bar_type",
      "options": [
        {
          "value": "icon",
          "label": "Search Icon Only"
        },
        {
          "value": "bar",
          "label": "Search Bar"
        }
      ],
      "default": "icon",
      "label": "Search Type"
    },
    {
      "type": "select",
      "id": "search_bar_position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "right",
      "label": "Search Bar Position"
    },
    {
      "type": "header",
      "content": "Top Navigation Styling"
    },
    {
      "type": "select",
      "id": "top_nav_alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Right"
        }
      ],
      "default": "center",
      "label": "Navigation Alignment"
    },
    {
      "type": "select",
      "id": "top_nav_style",
      "options": [
        {
          "value": "simple",
          "label": "Simple"
        },
        {
          "value": "underline",
          "label": "Underline"
        },
        {
          "value": "button",
          "label": "Button Style"
        }
      ],
      "default": "underline",
      "label": "Navigation Style"
    },
    {
      "type": "select",
      "id": "top_nav_background",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "transparent",
          "label": "Transparent"
        },
        {
          "value": "primary",
          "label": "Primary Color"
        }
      ],
      "default": "default",
      "label": "Navigation Background"
    },
    {
      "type": "range",
      "id": "top_nav_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font Size",
      "default": 14
    },
    {
      "type": "range",
      "id": "top_nav_font_weight",
      "min": 300,
      "max": 700,
      "step": 100,
      "label": "Font Weight",
      "default": 400
    },
    {
      "type": "range",
      "id": "top_nav_spacing",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Item Spacing",
      "default": 30
    },
    {
      "type": "range",
      "id": "top_nav_padding",
      "min": 5,
      "max": 25,
      "step": 1,
      "unit": "px",
      "label": "Top/Bottom Padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "top_nav_link_padding",
      "min": 4,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Link Padding",
      "default": 8
    },
    {
      "type": "range",
      "id": "top_nav_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Border Radius",
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "top_nav_mobile_hide",
      "default": true,
      "label": "Hide on Mobile"
    },
    {
      "type": "header",
      "content": "Search Bar Styling"
    },
    {
      "type": "range",
      "id": "search_bar_width",
      "min": 250,
      "max": 700,
      "step": 10,
      "unit": "px",
      "label": "Search Bar Width",
      "default": 500
    },
    {
      "type": "select",
      "id": "search_bar_background",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "transparent",
          "label": "Transparent"
        },
        {
          "value": "white",
          "label": "White"
        },
        {
          "value": "dark",
          "label": "Dark"
        },
        {
          "value": "accent",
          "label": "Accent Color"
        }
      ],
      "default": "default",
      "label": "Search Background"
    },
    {
      "type": "select",
      "id": "search_bar_border_color",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "accent",
          "label": "Accent Color"
        }
      ],
      "default": "default",
      "label": "Border Color"
    },
    {
      "type": "range",
      "id": "search_bar_border_radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Border Radius",
      "default": 25
    },
    {
      "type": "range",
      "id": "search_bar_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border Width",
      "default": 1
    },
    {
      "type": "range",
      "id": "search_bar_padding",
      "min": 8,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Input Padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "search_bar_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Font Size",
      "default": 14
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Search Placeholder Text",
      "default": "Search products...",
      "info": "Text shown in the search bar when empty"
    },
    {
      "type": "checkbox",
      "id": "search_placeholder_italic",
      "label": "Italic Placeholder Text",
      "default": false
    },
    {
      "type": "select",
      "id": "search_bar_focus_effect",
      "options": [
        {
          "value": "simple",
          "label": "Simple"
        },
        {
          "value": "glow",
          "label": "Glow Effect"
        },
        {
          "value": "scale",
          "label": "Scale Effect"
        }
      ],
      "default": "simple",
      "label": "Focus Effect"
    },
    {
      "type": "range",
      "id": "search_bar_focus_width",
      "min": 1,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Focus Ring Width",
      "default": 2
    },
    {
      "type": "select",
      "id": "search_button_style",
      "options": [
        {
          "value": "filled",
          "label": "Filled"
        },
        {
          "value": "outline",
          "label": "Outline"
        },
        {
          "value": "subtle",
          "label": "Subtle"
        }
      ],
      "default": "filled",
      "label": "Search Button Style"
    },
    {
      "type": "range",
      "id": "search_button_padding",
      "min": 4,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Button Padding",
      "default": 8
    },
    {
      "type": "range",
      "id": "search_button_border_radius",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Button Border Radius",
      "default": 20
    },
    {
      "type": "range",
      "id": "search_icon_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Search Icon Size",
      "default": 16
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    },
    {
      "type": "header",
      "content": "Mobile Navigation Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_navigation",
      "label": "Enable Mobile Bottom Navigation",
      "default": true,
      "info": "Show app-style bottom navigation on mobile devices"
    },
    {
      "type": "select",
      "id": "mobile_nav_style",
      "options": [
        {
          "value": "default",
          "label": "Default Theme Style"
        },
        {
          "value": "ios",
          "label": "iOS Style (Blurred)"
        },
        {
          "value": "android",
          "label": "Android Material"
        },
        {
          "value": "dark",
          "label": "Dark Theme"
        },
        {
          "value": "gradient",
          "label": "Colorful Gradient"
        },
        {
          "value": "custom",
          "label": "Custom Colors"
        }
      ],
      "default": "default",
      "label": "Mobile Navigation Style"
    },
    {
      "type": "select",
      "id": "mobile_nav_height",
      "options": [
        {
          "value": "compact",
          "label": "Compact (40px)"
        },
        {
          "value": "normal",
          "label": "Normal (56px)"
        },
        {
          "value": "tall",
          "label": "Tall (72px)"
        }
      ],
      "default": "normal",
      "label": "Navigation Height"
    },
    {
      "type": "checkbox",
      "id": "mobile_nav_show_labels",
      "label": "Show Text Labels",
      "default": true,
      "info": "Show text below icons (Home, Cart, etc.)"
    },
    {
      "type": "color",
      "id": "mobile_nav_background",
      "label": "Background Color (Custom Style)",
      "default": "#ffffff",
      "info": "Only applies when Custom Colors style is selected"
    },
    {
      "type": "color",
      "id": "mobile_nav_text_color",
      "label": "Icon & Text Color (Custom Style)",
      "default": "#000000",
      "info": "Only applies when Custom Colors style is selected"
    },
    {
      "type": "color",
      "id": "mobile_nav_active_color",
      "label": "Active Icon Color (Custom Style)",
      "default": "#007AFF",
      "info": "Color for the current page icon"
    },
    {
      "type": "color",
      "id": "mobile_nav_badge_color",
      "label": "Cart Badge Color (Custom Style)",
      "default": "#FF3B30",
      "info": "Background color for cart item count badge"
    },
    {
      "type": "range",
      "id": "mobile_nav_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Border Radius (Custom Style)",
      "default": 0,
      "info": "Rounded corners for navigation bar"
    },
    {
      "type": "range",
      "id": "mobile_nav_transparency",
      "min": 70,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Background Opacity",
      "default": 95,
      "info": "Background transparency level"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
