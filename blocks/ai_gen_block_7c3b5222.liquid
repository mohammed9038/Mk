{% doc %}
  @prompt
     i want show my collection list in modren and style way, let me control the grid of showing the collection and let add more collections, let me control how many rows, let user scroll the collections right and left and let me control the background color of the section, add section header

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-slider-{{ ai_gen_id }} {
    background-color: {{ block.settings.section_background }};
    padding: {{ block.settings.section_padding }}px 0;
    overflow: hidden;
  }

  .ai-collection-slider-header-{{ ai_gen_id }} {
    text-align: {{ block.settings.header_alignment }};
    margin-bottom: {{ block.settings.header_spacing }}px;
    padding: 0 20px;
  }

  .ai-collection-slider-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.header_title_size }}px;
    font-weight: {{ block.settings.header_title_weight }};
    color: {{ block.settings.header_title_color }};
    margin: 0 0 {{ block.settings.title_bottom_spacing }}px 0;
    line-height: 1.2;
  }

  .ai-collection-slider-subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.header_subtitle_size }}px;
    color: {{ block.settings.header_subtitle_color }};
    margin: 0;
    line-height: 1.4;
    opacity: 0.9;
  }

  .ai-collection-slider-container-{{ ai_gen_id }} {
    position: relative;
    max-width: 100%;
  }

  .ai-collection-slider-wrapper-{{ ai_gen_id }} {
    overflow-x: auto;
    overflow-y: hidden;
    scrollbar-width: none;
    -ms-overflow-style: none;
    scroll-behavior: smooth;
    padding-bottom: 10px;
    margin-bottom: -10px;
  }

  .ai-collection-slider-wrapper-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-collection-grid-{{ ai_gen_id }} {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax({{ block.settings.card_width_desktop }}px, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    padding: 0 20px;
    width: max-content;
    min-width: 100%;
  }

  .ai-collection-card-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    background: {{ block.settings.card_background }};
    box-shadow: 0 {{ block.settings.shadow_blur }}px {{ block.settings.shadow_spread }}px rgba(0, 0, 0, {{ block.settings.shadow_opacity | divided_by: 100.0 }});
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-decoration: none;
    color: inherit;
    width: {{ block.settings.card_width_desktop }}px;
    flex-shrink: 0;
  }

  .ai-collection-card-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
    box-shadow: 0 {{ block.settings.shadow_blur | plus: 5 }}px {{ block.settings.shadow_spread | plus: 5 }}px rgba(0, 0, 0, {{ block.settings.shadow_opacity | divided_by: 100.0 | plus: 0.1 }});
  }

  .ai-collection-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.image_height }}px;
    overflow: hidden;
  }

  .ai-collection-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-card-{{ ai_gen_id }}:hover .ai-collection-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-collection-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-collection-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.3;
  }

  .ai-collection-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.7) 100%);
    opacity: {{ block.settings.overlay_opacity | divided_by: 100.0 }};
  }

  .ai-collection-content-{{ ai_gen_id }} {
    padding: {{ block.settings.content_padding }}px;
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-collection-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: {{ block.settings.title_weight }};
    color: {{ block.settings.title_color }};
    margin: 0 0 8px 0;
    line-height: 1.2;
  }

  .ai-collection-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.description_color }};
    margin: 0 0 12px 0;
    line-height: 1.4;
    opacity: 0.8;
  }

  .ai-collection-count-{{ ai_gen_id }} {
    font-size: {{ block.settings.count_size }}px;
    color: {{ block.settings.count_color }};
    font-weight: 500;
    margin: 0;
  }

  .ai-collection-badge-{{ ai_gen_id }} {
    position: absolute;
    top: 12px;
    right: 12px;
    background: {{ block.settings.badge_background }};
    color: {{ block.settings.badge_text_color }};
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 600;
    z-index: 2;
  }

  .ai-collection-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 12px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(255, 255, 255, 0.9);
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 12px;
    color: #666;
    white-space: nowrap;
  }

  .ai-collection-nav-button-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: {{ block.settings.nav_button_background }};
    color: {{ block.settings.nav_button_color }};
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
    opacity: {{ block.settings.nav_button_opacity | divided_by: 100.0 }};
  }

  .ai-collection-nav-button-{{ ai_gen_id }}:hover {
    background: {{ block.settings.nav_button_hover_background }};
    transform: translateY(-50%) scale(1.1);
    opacity: 1;
  }

  .ai-collection-nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
    transform: translateY(-50%) scale(0.9);
  }

  .ai-collection-nav-button-{{ ai_gen_id }}--prev {
    left: 10px;
  }

  .ai-collection-nav-button-{{ ai_gen_id }}--next {
    right: 10px;
  }

  .ai-collection-nav-button-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-collection-scroll-indicator-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    gap: 8px;
  }

  .ai-collection-scroll-dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: {{ block.settings.indicator_color }};
    opacity: 0.3;
    transition: opacity 0.3s ease;
    cursor: pointer;
  }

  .ai-collection-scroll-dot-{{ ai_gen_id }}.active {
    opacity: 1;
  }

  @media screen and (max-width: 990px) {
    .ai-collection-grid-{{ ai_gen_id }} {
      grid-auto-columns: minmax({{ block.settings.card_width_tablet }}px, 1fr);
    }

    .ai-collection-card-{{ ai_gen_id }} {
      width: {{ block.settings.card_width_tablet }}px;
    }

    .ai-collection-nav-button-{{ ai_gen_id }} {
      width: 40px;
      height: 40px;
    }

    .ai-collection-nav-button-{{ ai_gen_id }} svg {
      width: 16px;
      height: 16px;
    }

    .ai-collection-slider-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.header_title_size | times: 0.9 }}px;
    }

    .ai-collection-slider-subtitle-{{ ai_gen_id }} {
      font-size: {{ block.settings.header_subtitle_size | times: 0.9 }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-collection-grid-{{ ai_gen_id }} {
      grid-auto-columns: minmax({{ block.settings.card_width_mobile }}px, 1fr);
      gap: {{ block.settings.grid_gap | times: 0.75 }}px;
      padding: 0 15px;
    }

    .ai-collection-card-{{ ai_gen_id }} {
      width: {{ block.settings.card_width_mobile }}px;
    }

    .ai-collection-image-wrapper-{{ ai_gen_id }} {
      height: {{ block.settings.image_height | times: 0.8 }}px;
    }

    .ai-collection-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.9 }}px;
    }

    .ai-collection-nav-button-{{ ai_gen_id }} {
      width: 36px;
      height: 36px;
    }

    .ai-collection-nav-button-{{ ai_gen_id }} svg {
      width: 14px;
      height: 14px;
    }

    .ai-collection-slider-header-{{ ai_gen_id }} {
      padding: 0 15px;
    }

    .ai-collection-slider-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.header_title_size | times: 0.8 }}px;
    }

    .ai-collection-slider-subtitle-{{ ai_gen_id }} {
      font-size: {{ block.settings.header_subtitle_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<collection-slider-{{ ai_gen_id }} class="ai-collection-slider-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.show_header and block.settings.header_title != blank or block.settings.header_subtitle != blank %}
    <div class="ai-collection-slider-header-{{ ai_gen_id }}">
      {% if block.settings.header_title != blank %}
        <h2 class="ai-collection-slider-title-{{ ai_gen_id }}">{{ block.settings.header_title }}</h2>
      {% endif %}
      
      {% if block.settings.header_subtitle != blank %}
        <p class="ai-collection-slider-subtitle-{{ ai_gen_id }}">{{ block.settings.header_subtitle }}</p>
      {% endif %}
    </div>
  {% endif %}

  <div class="ai-collection-slider-container-{{ ai_gen_id }}">
    {% if block.settings.show_navigation %}
      <button 
        class="ai-collection-nav-button-{{ ai_gen_id }} ai-collection-nav-button-{{ ai_gen_id }}--prev"
        aria-label="Previous collections"
        data-direction="prev"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>

      <button 
        class="ai-collection-nav-button-{{ ai_gen_id }} ai-collection-nav-button-{{ ai_gen_id }}--next"
        aria-label="Next collections"
        data-direction="next"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}

    <div class="ai-collection-slider-wrapper-{{ ai_gen_id }}">
      <div class="ai-collection-grid-{{ ai_gen_id }}">
        {% if block.settings.collections != blank %}
          {% for collection in block.settings.collections %}
            <a href="{{ collection.url }}" class="ai-collection-card-{{ ai_gen_id }}">
              <div class="ai-collection-image-wrapper-{{ ai_gen_id }}">
                {% if collection.featured_image %}
                  <img
                    src="{{ collection.featured_image | image_url: width: 600 }}"
                    alt="{{ collection.featured_image.alt | escape }}"
                    class="ai-collection-image-{{ ai_gen_id }}"
                    loading="lazy"
                    width="600"
                    height="{{ block.settings.image_height }}"
                  >
                {% else %}
                  <div class="ai-collection-placeholder-{{ ai_gen_id }}">
                    {{ 'collection-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
                
                {% if block.settings.show_overlay %}
                  <div class="ai-collection-overlay-{{ ai_gen_id }}"></div>
                {% endif %}

                {% if block.settings.show_product_count %}
                  <div class="ai-collection-badge-{{ ai_gen_id }}">
                    {{ collection.products_count }} 
                    {% if collection.products_count == 1 %}
                      product
                    {% else %}
                      products
                    {% endif %}
                  </div>
                {% endif %}
              </div>

              <div class="ai-collection-content-{{ ai_gen_id }}">
                <h3 class="ai-collection-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
                
                {% if block.settings.show_description and collection.description != blank %}
                  <p class="ai-collection-description-{{ ai_gen_id }}">
                    {{ collection.description | strip_html | truncate: 100 }}
                  </p>
                {% endif %}

                {% if block.settings.show_product_count %}
                  <p class="ai-collection-count-{{ ai_gen_id }}">
                    {{ collection.products_count }} 
                    {% if collection.products_count == 1 %}
                      item
                    {% else %}
                      items
                    {% endif %}
                  </p>
                {% endif %}
              </div>
            </a>
          {% endfor %}
        {% else %}
          {% for i in (1..5) %}
            <div class="ai-collection-card-{{ ai_gen_id }}">
              <div class="ai-collection-image-wrapper-{{ ai_gen_id }}">
                <div class="ai-collection-placeholder-{{ ai_gen_id }}">
                  {{ 'collection-1' | placeholder_svg_tag }}
                  {% if forloop.first %}
                    <div class="ai-collection-empty-state-{{ ai_gen_id }}">
                      Select collections to display
                    </div>
                  {% endif %}
                </div>
              </div>
              <div class="ai-collection-content-{{ ai_gen_id }}">
                <h3 class="ai-collection-title-{{ ai_gen_id }}">Sample Collection {{ forloop.index }}</h3>
                <p class="ai-collection-description-{{ ai_gen_id }}">
                  Add your collections to showcase them here
                </p>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>

    {% if block.settings.show_indicators and block.settings.collections.size > 1 %}
      <div class="ai-collection-scroll-indicator-{{ ai_gen_id }}">
        {% assign total_pages = block.settings.collections.size | divided_by: 3.0 | ceil %}
        {% for i in (1..total_pages) %}
          <div class="ai-collection-scroll-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}" data-page="{{ forloop.index0 }}"></div>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</collection-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.slider = null;
        this.prevButton = null;
        this.nextButton = null;
        this.indicators = null;
        this.currentPage = 0;
        this.itemsPerPage = 3;
      }

      connectedCallback() {
        this.slider = this.querySelector('.ai-collection-slider-wrapper-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-collection-nav-button-{{ ai_gen_id }}--prev');
        this.nextButton = this.querySelector('.ai-collection-nav-button-{{ ai_gen_id }}--next');
        this.indicators = this.querySelectorAll('.ai-collection-scroll-dot-{{ ai_gen_id }}');
        
        this.setupEventListeners();
        this.updateButtonStates();
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.scrollPrev());
        }
        
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.scrollNext());
        }

        this.indicators.forEach((indicator, index) => {
          indicator.addEventListener('click', () => this.scrollToPage(index));
        });

        this.slider.addEventListener('scroll', () => {
          this.updateIndicators();
          this.updateButtonStates();
        });

        let touchStartX = 0;
        let touchEndX = 0;

        this.slider.addEventListener('touchstart', (e) => {
          touchStartX = e.changedTouches[0].screenX;
        });

        this.slider.addEventListener('touchend', (e) => {
          touchEndX = e.changedTouches[0].screenX;
          this.handleSwipe(touchStartX, touchEndX);
        });
      }

      handleSwipe(startX, endX) {
        const swipeThreshold = 50;
        const diff = startX - endX;

        if (Math.abs(diff) > swipeThreshold) {
          if (diff > 0) {
            this.scrollNext();
          } else {
            this.scrollPrev();
          }
        }
      }

      scrollPrev() {
        const cardWidth = {{ block.settings.card_width_desktop }} + {{ block.settings.grid_gap }};
        this.slider.scrollBy({
          left: -cardWidth * this.itemsPerPage,
          behavior: 'smooth'
        });
      }

      scrollNext() {
        const cardWidth = {{ block.settings.card_width_desktop }} + {{ block.settings.grid_gap }};
        this.slider.scrollBy({
          left: cardWidth * this.itemsPerPage,
          behavior: 'smooth'
        });
      }

      scrollToPage(pageIndex) {
        const cardWidth = {{ block.settings.card_width_desktop }} + {{ block.settings.grid_gap }};
        this.slider.scrollTo({
          left: cardWidth * this.itemsPerPage * pageIndex,
          behavior: 'smooth'
        });
      }

      updateButtonStates() {
        if (!this.prevButton || !this.nextButton) return;

        const isAtStart = this.slider.scrollLeft <= 0;
        const isAtEnd = this.slider.scrollLeft >= this.slider.scrollWidth - this.slider.clientWidth - 10;

        this.prevButton.disabled = isAtStart;
        this.nextButton.disabled = isAtEnd;
      }

      updateIndicators() {
        if (this.indicators.length === 0) return;

        const cardWidth = {{ block.settings.card_width_desktop }} + {{ block.settings.grid_gap }};
        const pageWidth = cardWidth * this.itemsPerPage;
        const currentPage = Math.round(this.slider.scrollLeft / pageWidth);

        this.indicators.forEach((indicator, index) => {
          indicator.classList.toggle('active', index === currentPage);
        });
      }
    }

    customElements.define('collection-slider-{{ ai_gen_id }}', CollectionSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection slider",
  "settings": [
    {
      "type": "header",
      "content": "Section header"
    },
    {
      "type": "checkbox",
      "id": "show_header",
      "label": "Show section header",
      "default": true
    },
    {
      "type": "text",
      "id": "header_title",
      "label": "Title",
      "default": "Featured Collections"
    },
    {
      "type": "textarea",
      "id": "header_subtitle",
      "label": "Subtitle",
      "default": "Discover our curated collection of products"
    },
    {
      "type": "select",
      "id": "header_alignment",
      "label": "Header alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "header_title_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 36
    },
    {
      "type": "select",
      "id": "header_title_weight",
      "label": "Title weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "color",
      "id": "header_title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "header_subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "color",
      "id": "header_subtitle_color",
      "label": "Subtitle color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "header_spacing",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Header bottom spacing",
      "default": 40
    },
    {
      "type": "range",
      "id": "title_bottom_spacing",
      "min": 5,
      "max": 30,
      "step": 5,
      "unit": "px",
      "label": "Title bottom spacing",
      "default": 10
    },
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection_list",
      "id": "collections",
      "label": "Collections",
      "limit": 50
    },
    {
      "type": "header",
      "content": "Section style"
    },
    {
      "type": "color",
      "id": "section_background",
      "label": "Section background color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Card dimensions"
    },
    {
      "type": "range",
      "id": "card_width_desktop",
      "min": 250,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Card width on desktop",
      "default": 320
    },
    {
      "type": "range",
      "id": "card_width_tablet",
      "min": 200,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Card width on tablet",
      "default": 280
    },
    {
      "type": "range",
      "id": "card_width_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Card width on mobile",
      "default": 240
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Gap between cards",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Image height",
      "default": 280
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "content_padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Content padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Hover lift effect",
      "default": 8
    },
    {
      "type": "header",
      "content": "Shadow"
    },
    {
      "type": "range",
      "id": "shadow_blur",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Shadow blur",
      "default": 10
    },
    {
      "type": "range",
      "id": "shadow_spread",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Shadow spread",
      "default": 0
    },
    {
      "type": "range",
      "id": "shadow_opacity",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "%",
      "label": "Shadow opacity",
      "default": 15
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "color",
      "id": "nav_button_background",
      "label": "Navigation button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_hover_background",
      "label": "Navigation button hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "range",
      "id": "nav_button_opacity",
      "min": 50,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Navigation button opacity",
      "default": 80
    },
    {
      "type": "checkbox",
      "id": "show_indicators",
      "label": "Show scroll indicators",
      "default": true
    },
    {
      "type": "color",
      "id": "indicator_color",
      "label": "Indicator color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Image overlay"
    },
    {
      "type": "checkbox",
      "id": "show_overlay",
      "label": "Show image overlay",
      "default": true
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 80,
      "step": 10,
      "unit": "%",
      "label": "Overlay opacity",
      "default": 30
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 20
    },
    {
      "type": "select",
      "id": "title_weight",
      "label": "Title weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Display options"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show description",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "Show product count",
      "default": true
    },
    {
      "type": "range",
      "id": "count_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Count text size",
      "default": 12
    },
    {
      "type": "color",
      "id": "count_color",
      "label": "Count text color",
      "default": "#888888"
    },
    {
      "type": "color",
      "id": "badge_background",
      "label": "Badge background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "badge_text_color",
      "label": "Badge text color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Collection slider"
    }
  ]
}
{% endschema %}