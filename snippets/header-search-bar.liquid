{% comment %}
  Renders an inline header search bar (not modal). Should be used with 'header.liquid'

  Accepts:
  - input_id: {String} Id for the search input element (required)

  Usage:
  {% render 'header-search-bar', input_id: 'HeaderSearch' %}
{% endcomment %}

{%- assign search_placeholder = section.settings.search_placeholder | default: 'Search products...' -%}

{%- if settings.predictive_search_enabled -%}
  <predictive-search class="header__search-form" data-loading-text="{{ 'accessibility.loading' | t }}">
{%- else -%}
  <search-form class="header__search-form">
{%- endif -%}
  <form action="{{ routes.search_url }}" method="get" role="search" class="search header__search-form__form">
    <div class="field header__search-field">
      <input
        class="search__input field__input header__search-input"
        id="{{ input_id }}"
        type="search"
        name="q"
        value="{{ search.terms | escape }}"
        placeholder="{{ search_placeholder }}"
        {%- if settings.predictive_search_enabled -%}
          role="combobox"
          aria-expanded="false"
          aria-owns="predictive-search-results"
          aria-controls="predictive-search-results"
          aria-haspopup="listbox"
          aria-autocomplete="list"
          autocorrect="off"
          autocomplete="off"
          autocapitalize="off"
          spellcheck="false"
        {%- endif -%}
      >
      <label class="field__label" for="{{ input_id }}">{{ 'general.search.search' | t }}</label>
      <button
        type="submit"
        class="search__button field__button header__search-button"
        aria-label="{{ 'general.search.search' | t }}"
      >
        <svg class="icon icon-search" aria-hidden="true" focusable="false">
          <use href="#icon-search">
        </svg>
      </button>

      {%- if settings.predictive_search_enabled -%}
        <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
          {%- render 'loading-spinner', class: 'predictive-search__loading-state' -%}
        </div>

        <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
      {%- endif -%}
    </div>
  </form>
{%- if settings.predictive_search_enabled -%}
  </predictive-search>
{%- else -%}
  </search-form>
{%- endif -%}

<style>
  /* Dynamic styling based on section settings */
  .header__search-form {
    width: 100%;
    max-width: {{ section.settings.search_width | default: 400 }}px;
  }

  .header__search-input {
    height: {{ section.settings.search_height | default: 40 }}px;
    border-radius: {{ section.settings.search_border_radius | default: 25 }}px;
    background-color: {{ section.settings.search_background | default: '#ffffff' }};
    border-color: {{ section.settings.search_border | default: '#e0e0e0' }};
    color: {{ section.settings.search_text | default: '#333333' }};
    padding: 0 4rem 0 1.5rem;
  }

  .header__search-button {
    background-color: {{ section.settings.search_button_bg | default: '#333333' }};
    border-radius: 50%;
  }

  .header__search-button .icon {
    color: {{ section.settings.search_button_icon | default: '#ffffff' }};
  }

  /* Style variations */
  {%- if section.settings.search_style == 'flat' -%}
    .header__search-input {
      border-radius: 8px;
      border-width: 2px;
      box-shadow: none;
    }
    .header__search-button {
      border-radius: 6px;
    }
  {%- elsif section.settings.search_style == 'minimal' -%}
    .header__search-input {
      border: none;
      border-bottom: 2px solid {{ section.settings.search_border | default: '#e0e0e0' }};
      border-radius: 0;
      background: transparent;
      box-shadow: none;
    }
  {%- elsif section.settings.search_style == 'bold' -%}
    .header__search-input {
      border-width: 3px;
      font-weight: 600;
    }
  {%- endif -%}

  /* Position-specific styles */
  .header__search-bar--left {
    margin-right: 2rem;
  }
  
  .header__search-bar--right {
    margin-left: 2rem;
  }
</style>
